"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[54626],{15680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>m});var n=a(96540);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),h=c(a),p=o,m=h["".concat(l,".").concat(p)]||h[p]||u[p]||i;return a?n.createElement(m,s(s({ref:t},d),{},{components:a})):n.createElement(m,s({ref:t},d))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,s=new Array(i);s[0]=p;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[h]="string"==typeof e?e:o,s[1]=r;for(var c=2;c<i;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},81407:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var n=a(58168),o=(a(96540),a(15680));const i={slug:"SeaTunnel Application and Refactoring at Kidswant",title:"SeaTunnel Application and Refactoring at Kidswant",tags:["Meetup"]},s="SeaTunnel Application and Refactoring at Kidswant",r={permalink:"/blog/SeaTunnel Application and Refactoring at Kidswant",editUrl:"https://github.com/apache/seatunnel-website/edit/main/blog/2022-05-01_Kidswant.md",source:"@site/blog/2022-05-01_Kidswant.md",title:"SeaTunnel Application and Refactoring at Kidswant",description:"At the Apache SeaTunnel (Incubating) Meetup in April, Yuan Hongjun, a big data expert and OLAP platform architect at Kidswant, shared a topic of SeaTunnel Application and Refactoring at Kidswant.",date:"2022-05-01T00:00:00.000Z",formattedDate:"May 1, 2022",tags:[{label:"Meetup",permalink:"/blog/tags/meetup"}],readingTime:9.59,hasTruncateMarker:!1,authors:[],frontMatter:{slug:"SeaTunnel Application and Refactoring at Kidswant",title:"SeaTunnel Application and Refactoring at Kidswant",tags:["Meetup"]},prevItem:{title:"How to synchronize tens of billions of data based on SeaTunnel's ClickHouse",permalink:"/blog/How to synchronize tens of billions of data based on SeaTunnel's ClickHouse"},nextItem:{title:"Innovation of Data Integration Technology in the Intelligent Era",permalink:"/blog/Innovation of Data Integration Technology in the Intelligent Era"}},l={authorsImageUrls:[]},c=[{value:"01 Background",id:"01-background",level:2},{value:"02 Big data processing mainstream tools comparison",id:"02-big-data-processing-mainstream-tools-comparison",level:2},{value:"03 Implementation",id:"03-implementation",level:2},{value:"04 Common problems about the Apache SeaTunnel (Incubating) transformation",id:"04-common-problems-about-the-apache-seatunnel-incubating-transformation",level:2},{value:"01 OOM &amp; Too Many Parts",id:"01-oom--too-many-parts",level:4},{value:"02 Field and type inconsistency issues",id:"02-field-and-type-inconsistency-issues",level:4},{value:"03 Custom data sources &amp; custom separators",id:"03-custom-data-sources--custom-separators",level:4},{value:"04 Data skewing issues",id:"04-data-skewing-issues",level:4},{value:"05 KYLIN global dictionary lock problem",id:"05-kylin-global-dictionary-lock-problem",level:4},{value:"05 An outlook on the future of Kidswant",id:"05-an-outlook-on-the-future-of-kidswant",level:2}],d={toc:c},h="wrapper";function u(e){let{components:t,...i}=e;return(0,o.yg)(h,(0,n.A)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(2556).A,width:"1920",height:"1080"})),(0,o.yg)("p",null,"At the Apache SeaTunnel (Incubating) Meetup in April, Yuan Hongjun, a big data expert and OLAP platform architect at Kidswant, shared a topic of SeaTunnel Application and Refactoring at Kidswant."),(0,o.yg)("p",null,"The presentation contains five parts."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Background of the introduction of Apache SeaTunnel (Incubating) by Kidswant"),(0,o.yg)("li",{parentName:"ul"},"A comparison of mainstream tools for big data processing"),(0,o.yg)("li",{parentName:"ul"},"The implementation of Apache SeaTunnel (Incubating)"),(0,o.yg)("li",{parentName:"ul"},"Common problems in Apache SeaTunnel (Incubating) refactoring"),(0,o.yg)("li",{parentName:"ul"},"Predictions on the future development of Kidswant")),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(63234).A,width:"2578",height:"2567"})),(0,o.yg)("p",null,"Yuan Hongjun, Big data expert, OLAP platform architect of Kidswant. He has many years of experience in big data platform development and management, and has rich research experience in data assets, data lineage mapping, data governance, OLAP, and other fields."),(0,o.yg)("h2",{id:"01-background"},"01 Background"),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(54821).A,width:"1166",height:"720"})),(0,o.yg)("p",null,"At present, Kidswant\u2019s OLAP platform consists of seven parts: metadata layer, task layer, storage layer, SQL layer, scheduling layer, service layer, and monitoring layer. This sharing focuses on offline tasks in the task layer."),(0,o.yg)("p",null,"In fact, Kidswant had a complete internal collection and push system, but due to some historical legacy issues, the company\u2019s existing platform could not quickly support the OLAP platform getting online, so at that time the company had to abandon its own platform and start developing a new system instead.\nThere were three options in front of OLAP at the time."),(0,o.yg)("p",null,"1, Re-develop the collection and push system."),(0,o.yg)("p",null,"2\u3001Self-R&D."),(0,o.yg)("p",null,"3, Participate in open source projects."),(0,o.yg)("h2",{id:"02-big-data-processing-mainstream-tools-comparison"},"02 Big data processing mainstream tools comparison"),(0,o.yg)("p",null,"These three options have their own pros and cons. Carrying re-research and development based on the collection and push system is convenient for us to take advantage of the experience of previous results and avoid repeatedly stepping into the pit. But the disadvantage is that it requires a large amount of code, time, a longer research period, and with less abstract code and lots of customized functions bound to the business, it\u2019s difficult to do the re-development."),(0,o.yg)("p",null,"If completely self-developed, though the development process is autonomous and controllable, some engines such as Spark can be done to fit our own architecture, while the disadvantage is that we may encounter some unknown problems."),(0,o.yg)("p",null,"For the last choice, if we use open-source frameworks, the advantage is that there is more abstract code, and the framework can be guaranteed in terms of performance and stability after verification by other major companies. Therefore Kidswant mainly studied three open-source data synchronization tools, DATAX, Sqoop, and SeaTunnel in the early stages of OLAP data synchronization refactoring."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(26990).A,width:"919",height:"720"})),(0,o.yg)("p",null,"From the diagram we can see that Sqoop\u2019s main function is data synchronization for RDB, and its implementation is based on MAP/REDUCE. Sqoop has rich parameters and command lines to perform various operations. The advantage of Sqoop is that it fits Hadoop ecology, and already supports most of the conversion from RDB to HIVE arbitrary source, with a complete set of commands and APIs."),(0,o.yg)("p",null,"The disadvantages are that Sqoop only supports RDB data synchronization and has some limitations on data files, and there is no concept of data cleansing yet."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(26487).A,width:"1174",height:"720"})),(0,o.yg)("p",null,"DataX mainly aims at synchronizing data from any source by configurable files + multi-threading, which runs three main processes: Reader, Framework, and Writer, where Framework mainly plays the role of communication and leaving empty space."),(0,o.yg)("p",null,"The advantage of DataX is that it uses plug-in development, has its own flow control and data control, and is active in the community, with DataX\u2019s official website offering data pushes from many different sources. The disadvantage of DataX, however, is that it is memory-based and there may be limitations on the amount of data available."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(4344).A,width:"1025",height:"720"})),(0,o.yg)("p",null,"Apache SeaTunnel (Incubating) also does data synchronization from any source and implements the process in three steps: source, transform and sink based on configuration files, Spark or Flink. "),(0,o.yg)("p",null,"The advantage is that the current 2.1.0 version has a very large number of plug-ins and source pushes, based on the idea of plug-ins also makes it very easy to extend and embrace Spark and Flink while with a distributed architecture. The only downside to Apache SeaTunnel (Incubating) is probably the lack of IP calls at the moment and the need to manage the UI interface by yourself."),(0,o.yg)("p",null,"In summary, although Sqoop is distributed, it only supports data synchronization between RDB and HIVE, Hbase and has poor scalability, which is not convenient for re-development. DataX is scalable and stable overall, but because it is a standalone version, it cannot be deployed in a distributed cluster, and there is a strong dependency between data extraction capability and machine performance. SeaTunnel, on the other hand, is similar to DataX and makes up for the flaw of non-distributed DataX. It also supports real-time streaming, and the community is highly active as a new product. We chose SeaTunnel based on a number of factors such as whether it supported distributed or not, and whether it needed to be deployed on a separate machine."),(0,o.yg)("h2",{id:"03-implementation"},"03 Implementation"),(0,o.yg)("p",null,"On the Apache SeaTunnel (Incubating) website, we can see that the basic process of Apache SeaTunnel (Incubating) consists of three parts: source, transform and sink. According to the guidelines on the website, Apache SeaTunnel (Incubating) requires a configuration script to start, but after some research, we found that the final execution of Apache SeaTunnel (Incubating) is bansed on an application submitted by spark-submit that relies on the config file."),(0,o.yg)("p",null,"This initialization, although simple, has the problem of having to rely on the config file, which is generated and then cleared after each run, and although it can be dynamically generated in the scheduling script, it raises two questions: 1) whether frequent disk operations make sense; and 2) whether there is a more efficient way to support Apache SeaTunnel (Incubating)."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(25473).A,width:"1196",height:"720"})),(0,o.yg)("p",null,"With these considerations in mind, we added a Unified Configuration Template Platform module to the final design solution. Scheduling is done by initiating a commit command, and Apache SeaTunnel (Incubating) itself pulls the configuration information from the unified configuration template platform, then loads and initializes the parameters."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(84394).A,width:"1048",height:"720"})),(0,o.yg)("p",null,"The diagram above shows the business process for Kidswant\u2019s OLAP, which is divided into three sections. The overall flow of data from Parquet, i.e. Hive, through the Parquet tables to KYLIN and CK source."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(99955).A,width:"1080",height:"687"})),(0,o.yg)("p",null,"This is the page where we construct the model, which is generated mainly through drag and drop, with some transactional operations between each table, and micro-processing for Apache SeaTunnel (Incubating) on the right."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(74036).A,width:"1247",height:"596"})),(0,o.yg)("p",null,"So we end up submitting the commands as above, where the first one marked in red is ","[-conf customconfig/jars]",", referring to the fact that the user can then unify the configuration template platform for processing, or specify it separately when modeling. The last one marked in red is ","[421 $start_time $end_time $taskType]"," Unicode, which is a unique encoding."),(0,o.yg)("p",null,"Below, on the left, are the 38 commands submitted by our final dispatch script. Below, on the right, is a modification made for Apache SeaTunnel (Incubating), and you can see a more specific tool class called WaterdropContext. It can first determine if Unicode exists and then use Unicode_code to get the configuration information for the different templates, avoiding the need to manipulate the config file."),(0,o.yg)("p",null,"In the end, the reportMeta is used to report some information after the task is completed, which is also done in Apache SeaTunnel (Incubating)."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(95165).A,width:"720",height:"752"})),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(17825).A,width:"1280",height:"585"})),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(96696).A,width:"1280",height:"512"})),(0,o.yg)("p",null,"In the finalized config file as above, it is worth noting that in terms of transforms, Kidswant has made some changes. The first is to do desensitization for mobile phones or ID numbers etc. If the user specifies a field, they do it by field, if not they will scan all fields and then desensitize and encrypt them according to pattern matching."),(0,o.yg)("p",null,"Second, transform also supports custom processing, as mentioned above when talking about OLAP modeling. With the addition of HideStr, the first ten fields of a string of characters can be retained and all characters at the back encrypted, providing some security in the data."),(0,o.yg)("p",null,"Then, on the sink side, we added pre_sql in order to support the idempotency of the task, which is mainly done for tasks such as data deletion, or partition deletion, as the task cannot be run only once during production, and this design needed to account for the data deviation and correctness once operations such as reruns or complement occur."),(0,o.yg)("p",null,"On the right side of the diagram, on the Sink side of a Clickhouse, we have added an is_senseless_mode, which forms a read/write senseless mode, where the user does not perceive the whole area when querying and complementing but uses the CK partition conversion, i.e. the command called MOVE PARTITION TO TABLE to operate."),(0,o.yg)("p",null,"A special note here is the Sink side of KYLIN. KYLIN is a very special source with its own set of data entry logic and its monitoring page, so the transformation we have done on KYLIN is simply a call to its API operation and a simple API call and constant polling of the state when using KYLIN, so the resources for KYLIN are limited in the Unified Template Configuration platform."),(0,o.yg)("p",null,(0,o.yg)("img",{src:a(92307).A,width:"1249",height:"586"})),(0,o.yg)("h2",{id:"04-common-problems-about-the-apache-seatunnel-incubating-transformation"},"04 Common problems about the Apache SeaTunnel (Incubating) transformation"),(0,o.yg)("h4",{id:"01-oom--too-many-parts"},"01 OOM & Too Many Parts"),(0,o.yg)("p",null,"The problem usually arises during the Hive to Hive process, even if we go through automatic resource allocation, but there are cases where the data amount suddenly gets bigger, for example after holding several events. Such problems can only be avoided by manually and dynamically tuning the reference and adjusting the data synchronization batch time. In the future, we may try to control the data volume to achieve fine control."),(0,o.yg)("h4",{id:"02-field-and-type-inconsistency-issues"},"02 Field and type inconsistency issues"),(0,o.yg)("p",null,"When the model runs, the user will make some changes to the upstream tables or fields that the task depends on, and these changes may lead to task failure if they are not perceived. The current solution is to rely on data lineage+ snapshots for advance awareness to avoid errors."),(0,o.yg)("h4",{id:"03-custom-data-sources--custom-separators"},"03 Custom data sources & custom separators"),(0,o.yg)("p",null,"If the finance department requires a customized separator or jar information, the user can now specify the loading of additional jar information as well as the separator information themselves in the unified configuration template platform."),(0,o.yg)("h4",{id:"04-data-skewing-issues"},"04 Data skewing issues"),(0,o.yg)("p",null,"This may be due to users setting their parallelism but not being able to do so perfectly. We haven\u2019t finished dealing with this issue yet, but we may add post-processing to the Source module to break up the data and complete the skew."),(0,o.yg)("h4",{id:"05-kylin-global-dictionary-lock-problem"},"05 KYLIN global dictionary lock problem"),(0,o.yg)("p",null,"As the business grows, one cube will not be able to meet the needs of the users, so it will be necessary to create more than one cube. If the same fields are used between multiple cubes, the problem of KYLIN global dictionary lock will be encountered. The current solution is to separate the scheduling time between two or more tasks, or if this is not possible, we can make a distributed lock control, where the sink side of KYLIN has to get the lock to run."),(0,o.yg)("h2",{id:"05-an-outlook-on-the-future-of-kidswant"},"05 An outlook on the future of Kidswant"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Multi-source data synchronization, maybe processing for RDB sources"),(0,o.yg)("li",{parentName:"ol"},"Real-time Flink-based implementation"),(0,o.yg)("li",{parentName:"ol"},"Take over the existing collection and scheduling platform (mainly to solve the problem of splitting library and tables)"),(0,o.yg)("li",{parentName:"ol"},"Data quality verification, like some null values, the vacancy rate of the whole data, main time judgment, etc.")),(0,o.yg)("p",null,"This is all I have to share, I hope we can communicate more with the community in the future and make progress together, thanks!"))}u.isMDXComponent=!0},63234:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/0-1-4c853aa726b29acc5954ba53240dc2b8.png"},2556:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/0-38f7968af0b7239e9d427a85adee4452.png"},54821:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/1-198d9a9b685f80a9814d5620d1194355.png"},17825:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/10-0472de8100ba32800e40ea9e86f3b35f.png"},96696:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/11-910cd332e1ebf6b9d7d3ea9186a5c8fa.png"},92307:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/12-859f200352aab300d0e421ba01e86da6.png"},26990:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/2-fa4598ecce2b564564a8dfb2f7ccae87.png"},26487:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/3-53716e33ac191ff35ff66591ba4e1711.png"},4344:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/4-1897837b0d7e4b52bc086c94b5aa4aea.png"},25473:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/5-c2ec6a581e98f15b50a0925325be6acf.png"},84394:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/6-5d4653fed2f38a65b3e8c04428e1d53e.png"},99955:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/7-2eed2f9ff97c6bfcc712e992568dd102.png"},74036:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/8-8d444012b45ea1a51088db223d29efa6.png"},95165:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/9-54db46eb9209112af1884f1ef6454536.png"}}]);