"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[72537],{15680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>c});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),g=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=g(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=g(n),y=r,c=u["".concat(p,".").concat(y)]||u[y]||d[y]||l;return n?a.createElement(c,i(i({ref:t},s),{},{components:n})):a.createElement(c,i({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=y;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var g=2;g<l;g++)i[g]=n[g];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},29088:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var a=n(58168),r=(n(96540),n(15680));const l={},i=void 0,o={unversionedId:"configuration/filter-plugins/Table",id:"version-1.x/configuration/filter-plugins/Table",title:"Table",description:"Filter plugin : Table",source:"@site/versioned_docs/version-1.x/configuration/filter-plugins/Table.md",sourceDirName:"configuration/filter-plugins",slug:"/configuration/filter-plugins/Table",permalink:"/docs/1.x/configuration/filter-plugins/Table",draft:!1,editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/versioned_docs/version-1.x/configuration/filter-plugins/Table.md",tags:[],version:"1.x",frontMatter:{},sidebar:"docs",previous:{title:"Sql",permalink:"/docs/1.x/configuration/filter-plugins/Sql"},next:{title:"Truncate",permalink:"/docs/1.x/configuration/filter-plugins/Truncate"}},p={},g=[{value:"Filter plugin : Table",id:"filter-plugin--table",level:2},{value:"Description",id:"description",level:3},{value:"Options",id:"options",level:3},{value:"cache boolean",id:"cache-boolean",level:5},{value:"delimiter string",id:"delimiter-string",level:5},{value:"field_types array",id:"field_types-array",level:5},{value:"fields array",id:"fields-array",level:5},{value:"path string",id:"path-string",level:5},{value:"table_name string",id:"table_name-string",level:5},{value:"Example",id:"example",level:3}],s={toc:g},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"filter-plugin--table"},"Filter plugin : Table"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Author: InterestingLab"),(0,r.yg)("li",{parentName:"ul"},"Homepage: ",(0,r.yg)("a",{parentName:"li",href:"https://interestinglab.github.io/seatunnel-docs"},"https://interestinglab.github.io/seatunnel-docs")),(0,r.yg)("li",{parentName:"ul"},"Version: 1.0.0")),(0,r.yg)("h3",{id:"description"},"Description"),(0,r.yg)("p",null,"It is used to map static files into a table, which can be associated with real-time processed streams. "),(0,r.yg)("p",null,"It is always used for joining user nicknames, national provinces and cities, etc."),(0,r.yg)("h3",{id:"options"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"name"),(0,r.yg)("th",{parentName:"tr",align:null},"type"),(0,r.yg)("th",{parentName:"tr",align:null},"required"),(0,r.yg)("th",{parentName:"tr",align:null},"default value"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#cache-boolean"},"cache")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null},"no"),(0,r.yg)("td",{parentName:"tr",align:null},"true")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#delimiter-string"},"delimiter")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"no"),(0,r.yg)("td",{parentName:"tr",align:null},",")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#field_types-array"},"field_types")),(0,r.yg)("td",{parentName:"tr",align:null},"array"),(0,r.yg)("td",{parentName:"tr",align:null},"no"),(0,r.yg)("td",{parentName:"tr",align:null},"-")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#fields-array"},"fields")),(0,r.yg)("td",{parentName:"tr",align:null},"array"),(0,r.yg)("td",{parentName:"tr",align:null},"yes"),(0,r.yg)("td",{parentName:"tr",align:null},"-")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#path-string"},"path")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"yes"),(0,r.yg)("td",{parentName:"tr",align:null},"-")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#table_name-string"},"table_name")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"yes"),(0,r.yg)("td",{parentName:"tr",align:null},"-")))),(0,r.yg)("h5",{id:"cache-boolean"},"cache ","[boolean]"),(0,r.yg)("p",null,"Whether to cache file contents in memory. If false, it will reload every time you need."),(0,r.yg)("h5",{id:"delimiter-string"},"delimiter ","[string]"),(0,r.yg)("p",null,"The delimiter between columns in the file."),(0,r.yg)("h5",{id:"field_types-array"},"field_types ","[array]"),(0,r.yg)("p",null,"The type of each field, the order and length of ",(0,r.yg)("inlineCode",{parentName:"p"},"field_types")," must correspond to the ",(0,r.yg)("inlineCode",{parentName:"p"},"fields")," parameter. The default type of all columns is string. Supported data types include: ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"double"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"long"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"string")),(0,r.yg)("h5",{id:"fields-array"},"fields ","[array]"),(0,r.yg)("p",null,"The names of the columns in each row, while should be provided by the actual columns in the data in order."),(0,r.yg)("h5",{id:"path-string"},"path ","[string]"),(0,r.yg)("p",null,"File path supported by Spark. For example, file:///path/to/file, hdfs:///path/to/file, s3:///path/to/file ..."),(0,r.yg)("h5",{id:"table_name-string"},"table_name ","[string]"),(0,r.yg)("p",null,"After loading the file, it will be registered as a table. Here, the table name is specified, which can be used to directly associate with the stream processing data."),(0,r.yg)("h3",{id:"example"},"Example"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Without ",(0,r.yg)("inlineCode",{parentName:"p"},"field_types"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"table {\n    table_name = \"mydict\"\n    path = \"/user/seatunnel/mylog/a.txt\"\n    fields = ['city', 'population']\n}\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"With ",(0,r.yg)("inlineCode",{parentName:"p"},"field_types"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"table {\n    table_name = \"mydict\"\n    path = \"/user/seatunnel/mylog/a.txt\"\n    fields = ['city', 'population']\n    field_types = ['string', 'long']\n}\n")))}d.isMDXComponent=!0}}]);