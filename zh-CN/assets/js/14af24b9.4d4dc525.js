"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[87600],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>c});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},g=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),m=s(t),y=r,c=m["".concat(p,".").concat(y)]||m[y]||u[y]||i;return t?a.createElement(c,l(l({ref:n},g),{},{components:t})):a.createElement(c,l({ref:n},g))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=y;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},21564:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=t(58168),r=(t(96540),t(15680));const i={},l="File",o={unversionedId:"flink/configuration/source-plugins/File",id:"version-2.1.0/flink/configuration/source-plugins/File",title:"File",description:"Source plugin : File [Flink]",source:"@site/versioned_docs/version-2.1.0/flink/configuration/source-plugins/File.md",sourceDirName:"flink/configuration/source-plugins",slug:"/flink/configuration/source-plugins/File",permalink:"/zh-CN/docs/2.1.0/flink/configuration/source-plugins/File",draft:!1,editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/versioned_docs/version-2.1.0/flink/configuration/source-plugins/File.md",tags:[],version:"2.1.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Fake",permalink:"/zh-CN/docs/2.1.0/flink/configuration/source-plugins/Fake"},next:{title:"InfluxDb",permalink:"/zh-CN/docs/2.1.0/flink/configuration/source-plugins/InfluxDb"}},p={},s=[{value:"Description",id:"description",level:2},{value:"Options",id:"options",level:2},{value:"format.type string",id:"formattype-string",level:3},{value:"path string",id:"path-string",level:3},{value:"schema string",id:"schema-string",level:3},{value:"common options string",id:"common-options-string",level:3},{value:"parallelism Int",id:"parallelism-int",level:3},{value:"Examples",id:"examples",level:2}],g={toc:s},m="wrapper";function u(e){let{components:n,...t}=e;return(0,r.yg)(m,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"file"},"File"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Source plugin : File ","[Flink]")),(0,r.yg)("h2",{id:"description"},"Description"),(0,r.yg)("p",null,"Read data from the file system"),(0,r.yg)("h2",{id:"options"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"name"),(0,r.yg)("th",{parentName:"tr",align:null},"type"),(0,r.yg)("th",{parentName:"tr",align:null},"required"),(0,r.yg)("th",{parentName:"tr",align:null},"default value"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"format.type"),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"yes"),(0,r.yg)("td",{parentName:"tr",align:null},"-")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"path"),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"yes"),(0,r.yg)("td",{parentName:"tr",align:null},"-")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"schema"),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"yes"),(0,r.yg)("td",{parentName:"tr",align:null},"-")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"common-options"),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"no"),(0,r.yg)("td",{parentName:"tr",align:null},"-")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"parallelism"),(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},"no"),(0,r.yg)("td",{parentName:"tr",align:null},"-")))),(0,r.yg)("h3",{id:"formattype-string"},"format.type ","[string]"),(0,r.yg)("p",null,"The format for reading files from the file system, currently supports ",(0,r.yg)("inlineCode",{parentName:"p"},"csv")," , ",(0,r.yg)("inlineCode",{parentName:"p"},"json")," , ",(0,r.yg)("inlineCode",{parentName:"p"},"parquet")," , ",(0,r.yg)("inlineCode",{parentName:"p"},"orc")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"text")," ."),(0,r.yg)("h3",{id:"path-string"},"path ","[string]"),(0,r.yg)("p",null,"The file path is required. The ",(0,r.yg)("inlineCode",{parentName:"p"},"hdfs file")," starts with ",(0,r.yg)("inlineCode",{parentName:"p"},"hdfs://")," , and the ",(0,r.yg)("inlineCode",{parentName:"p"},"local file")," starts with ",(0,r.yg)("inlineCode",{parentName:"p"},"file://")," ."),(0,r.yg)("h3",{id:"schema-string"},"schema ","[string]"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"csv"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"The ",(0,r.yg)("inlineCode",{parentName:"li"},"schema")," of ",(0,r.yg)("inlineCode",{parentName:"li"},"csv")," is a string of ",(0,r.yg)("inlineCode",{parentName:"li"},"jsonArray")," , such as ",(0,r.yg)("inlineCode",{parentName:"li"},'"[{\\"type\\":\\"long\\"},{\\"type\\":\\"string\\"}]"')," , this can only specify the type of the field , The field name cannot be specified, and the common configuration parameter ",(0,r.yg)("inlineCode",{parentName:"li"},"field_name")," is generally required."))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"json"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"The ",(0,r.yg)("inlineCode",{parentName:"li"},"schema")," parameter of ",(0,r.yg)("inlineCode",{parentName:"li"},"json")," is to provide a ",(0,r.yg)("inlineCode",{parentName:"li"},"json string")," of the original data, and the ",(0,r.yg)("inlineCode",{parentName:"li"},"schema")," can be automatically generated, but the original data with the most complete content needs to be provided, otherwise the fields will be lost."))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"parquet"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"The ",(0,r.yg)("inlineCode",{parentName:"li"},"schema")," of ",(0,r.yg)("inlineCode",{parentName:"li"},"parquet")," is an ",(0,r.yg)("inlineCode",{parentName:"li"},"Avro schema string")," , such as ",(0,r.yg)("inlineCode",{parentName:"li"},'{\\"type\\":\\"record\\",\\"name\\":\\"test\\",\\"fields\\":[{\\"name\\" :\\"a\\",\\"type\\":\\"int\\"},{\\"name\\":\\"b\\",\\"type\\":\\"string\\"}]}')," ."))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"orc"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"The ",(0,r.yg)("inlineCode",{parentName:"li"},"schema")," of ",(0,r.yg)("inlineCode",{parentName:"li"},"orc")," is the string of ",(0,r.yg)("inlineCode",{parentName:"li"},"orc schema")," , such as ",(0,r.yg)("inlineCode",{parentName:"li"},'"struct<name:string,addresses:array<struct<street:string,zip:smallint>>>"')," ."))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"text"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"The ",(0,r.yg)("inlineCode",{parentName:"li"},"schema")," of ",(0,r.yg)("inlineCode",{parentName:"li"},"text")," can be filled with ",(0,r.yg)("inlineCode",{parentName:"li"},"string")," .")))),(0,r.yg)("h3",{id:"common-options-string"},"common options ","[string]"),(0,r.yg)("p",null,"Source plugin common parameters, please refer to ",(0,r.yg)("a",{parentName:"p",href:"/zh-CN/docs/2.1.0/flink/configuration/source-plugins/source-plugin"},"Source Plugin")," for details"),(0,r.yg)("h3",{id:"parallelism-int"},"parallelism ","[",(0,r.yg)("inlineCode",{parentName:"h3"},"Int"),"]"),(0,r.yg)("p",null,"The parallelism of an individual operator, for FileSource"),(0,r.yg)("h2",{id:"examples"},"Examples"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'  FileSource{\n    path = "hdfs://localhost:9000/input/"\n    format.type = "json"\n    schema = "{\\"data\\":[{\\"a\\":1,\\"b\\":2},{\\"a\\":3,\\"b\\":4}],\\"db\\":\\"string\\",\\"q\\":{\\"s\\":\\"string\\"}}"\n    result_table_name = "test"\n  }\n')))}u.isMDXComponent=!0}}]);