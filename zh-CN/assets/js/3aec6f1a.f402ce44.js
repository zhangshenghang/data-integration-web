"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[34445],{15680:(e,n,a)=>{a.d(n,{xA:()=>p,yg:()=>y});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function g(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=t.createContext({}),s=function(e){var n=t.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=s(e.components);return t.createElement(o.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=g(e,["components","mdxType","originalType","parentName"]),u=s(a),c=r,y=u["".concat(o,".").concat(c)]||u[c]||m[c]||l;return a?t.createElement(y,i(i({ref:n},p),{},{components:a})):t.createElement(y,i({ref:n},p))}));function y(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var g={};for(var o in n)hasOwnProperty.call(n,o)&&(g[o]=n[o]);g.originalType=e,g[u]="string"==typeof e?e:r,i[1]=g;for(var s=2;s<l;s++)i[s]=a[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}c.displayName="MDXCreateElement"},55956:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>g,toc:()=>s});var t=a(58168),r=(a(96540),a(15680));const l={},i=void 0,g={unversionedId:"configuration/filter-plugins/Json",id:"version-1.x/configuration/filter-plugins/Json",title:"Json",description:"Filter plugin : Json",source:"@site/versioned_docs/version-1.x/configuration/filter-plugins/Json.md",sourceDirName:"configuration/filter-plugins",slug:"/configuration/filter-plugins/Json",permalink:"/zh-CN/docs/1.x/configuration/filter-plugins/Json",draft:!1,editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/versioned_docs/version-1.x/configuration/filter-plugins/Json.md",tags:[],version:"1.x",frontMatter:{},sidebar:"docs",previous:{title:"Join",permalink:"/zh-CN/docs/1.x/configuration/filter-plugins/Join"},next:{title:"Kv",permalink:"/zh-CN/docs/1.x/configuration/filter-plugins/Kv"}},o={},s=[{value:"Filter plugin : Json",id:"filter-plugin--json",level:2},{value:"Description",id:"description",level:3},{value:"Options",id:"options",level:3},{value:"source_field string",id:"source_field-string",level:5},{value:"target_field string",id:"target_field-string",level:5},{value:"schema_dir string",id:"schema_dir-string",level:5},{value:"schema_file string",id:"schema_file-string",level:5},{value:"Use cases",id:"use-cases",level:3},{value:"Examples",id:"examples",level:3}],p={toc:s},u="wrapper";function m(e){let{components:n,...a}=e;return(0,r.yg)(u,(0,t.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"filter-plugin--json"},"Filter plugin : Json"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Author: InterestingLab"),(0,r.yg)("li",{parentName:"ul"},"Homepage: ",(0,r.yg)("a",{parentName:"li",href:"https://interestinglab.github.io/seatunnel-docs"},"https://interestinglab.github.io/seatunnel-docs")),(0,r.yg)("li",{parentName:"ul"},"Version: 1.0.0")),(0,r.yg)("h3",{id:"description"},"Description"),(0,r.yg)("p",null,"It takes an existing field which contains a json string and extract its fields."),(0,r.yg)("h3",{id:"options"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"name"),(0,r.yg)("th",{parentName:"tr",align:null},"type"),(0,r.yg)("th",{parentName:"tr",align:null},"required"),(0,r.yg)("th",{parentName:"tr",align:null},"default value"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#source_field-string"},"source_field")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"no"),(0,r.yg)("td",{parentName:"tr",align:null},"raw_message")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#target_field-string"},"target_field")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"no"),(0,r.yg)("td",{parentName:"tr",align:null},"_","_","root","_","_")))),(0,r.yg)("h5",{id:"source_field-string"},"source_field ","[string]"),(0,r.yg)("p",null,"Source field, default is ",(0,r.yg)("inlineCode",{parentName:"p"},"raw_message"),"."),(0,r.yg)("h5",{id:"target_field-string"},"target_field ","[string]"),(0,r.yg)("p",null,"New field name."),(0,r.yg)("h5",{id:"schema_dir-string"},"schema_dir ","[string]"),(0,r.yg)("p",null,"Json schema absolute directory path\uff0cdefault is ",(0,r.yg)("inlineCode",{parentName:"p"},"$seatunnelRoot/plugins/json/files/schemas/")),(0,r.yg)("h5",{id:"schema_file-string"},"schema_file ","[string]"),(0,r.yg)("p",null,"Json schema file name, if not set, the system will infer the schema from input source."),(0,r.yg)("h3",{id:"use-cases"},"Use cases"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("inlineCode",{parentName:"li"},"json schema")," ",(0,r.yg)("strong",{parentName:"li"},"use case"))),(0,r.yg)("p",null,"There might be multiple input json schemas in a single job, e.g. the schema in topicA of kafka can be:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "A": "a_val",\n  "B": "b_val"\n}\n')),(0,r.yg)("p",null,"the schema of topicB can be:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "C": "c_val",\n  "D": "d_val"\n}\n')),(0,r.yg)("p",null,"If we need to combine two schemas and make it output as a wide table, we can specify a schema with content below:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "A": "a_val",\n  "B": "b_val",\n  "C": "c_val",\n  "D": "d_val"\n}\n')),(0,r.yg)("p",null,"then the output of topicA and topicB would be\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"+-----+-----+-----+-----+\n|A    |B    |C    |D    |\n+-----+-----+-----+-----+\n|a_val|b_val|null |null |\n|null |null |c_val|d_val|\n+-----+-----+-----+-----+\n")),(0,r.yg)("h3",{id:"examples"},"Examples"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Without ",(0,r.yg)("inlineCode",{parentName:"p"},"target_field")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'json {\n    source_field = "message"\n}\n')),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Input"))),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'+----------------------------+\n|message                   |\n+----------------------------+\n|{"name": "ricky", "age": 24}|\n|{"name": "gary", "age": 28} |\n+----------------------------+\n')),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Output"))),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'+----------------------------+---+-----+\n|message                   |age|name |\n+----------------------------+---+-----+\n|{"name": "gary", "age": 28} |28 |gary |\n|{"name": "ricky", "age": 23}|23 |ricky|\n+----------------------------+---+-----+\n'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"With ",(0,r.yg)("inlineCode",{parentName:"p"},"target_field")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'json {\n    source_field = "message"\n    target_field = "info"\n}\n')),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Input"))),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'+----------------------------+\n|message                   |\n+----------------------------+\n|{"name": "ricky", "age": 24}|\n|{"name": "gary", "age": 28} |\n+----------------------------+\n')),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Output"))),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'+----------------------------+----------+\n|message                   |info      |\n+----------------------------+----------+\n|{"name": "gary", "age": 28} |[28,gary] |\n|{"name": "ricky", "age": 23}|[23,ricky]|\n+----------------------------+----------+\n\n'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"With ",(0,r.yg)("inlineCode",{parentName:"p"},"schema_file")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'json {\n    source_field = "message"\n    schema_file = "demo.json"\n}\n')),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Schema"))),(0,r.yg)("p",{parentName:"li"},"Make the content of ",(0,r.yg)("inlineCode",{parentName:"p"},"/opt/seatunnel/plugins/json/files/schemas/demo.json")," on ",(0,r.yg)("inlineCode",{parentName:"p"},"Driver node")," as below\uff1a"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n   "name": "demo",\n   "age": 24,\n   "city": "LA"\n}\n')),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Input"))),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'+----------------------------+\n|message                   |\n+----------------------------+\n|{"name": "ricky", "age": 24}|\n|{"name": "gary", "age": 28} |\n+----------------------------+\n')),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Output"))),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'+----------------------------+---+-----+-----+\n|message                     |age|name |city |\n+----------------------------+---+-----+-----+\n|{"name": "gary", "age": 28} |28 |gary |null |\n|{"name": "ricky", "age": 23}|23 |ricky|null |\n+----------------------------+---+-----+-----+\n')),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},"If deploy in ",(0,r.yg)("inlineCode",{parentName:"p"},"cluster")," mode\uff0cmake sure json schemas directory is packed in plugins.tar.gz")))))}m.isMDXComponent=!0}}]);