"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[55055],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>m});var a=n(96540);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),g=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=g(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=g(n),d=l,m=p["".concat(s,".").concat(d)]||p[d]||y[d]||r;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:l,i[1]=o;for(var g=2;g<r;g++)i[g]=n[g];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53123:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>r,metadata:()=>o,toc:()=>g});var a=n(58168),l=(n(96540),n(15680));const r={},i="Introduction",o={unversionedId:"introduction",id:"version-1.x/introduction",title:"Introduction",description:"---",source:"@site/versioned_docs/version-1.x/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/zh-CN/docs/1.x/introduction",draft:!1,editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/versioned_docs/version-1.x/introduction.md",tags:[],version:"1.x",frontMatter:{},sidebar:"docs",next:{title:"Quick start",permalink:"/zh-CN/docs/1.x/quick-start"}},s={},g=[{value:"Core Concepts",id:"core-concepts",level:2},{value:"Event",id:"event",level:3},{value:"Field Name",id:"field-name",level:4},{value:"Metadata",id:"metadata",level:4},{value:"Field Reference",id:"field-reference",level:4},{value:"Input",id:"input",level:2},{value:"Kafka",id:"kafka",level:3},{value:"Filters",id:"filters",level:2},{value:"JSON",id:"json",level:3},{value:"Split",id:"split",level:3},{value:"Synopsis",id:"synopsis",level:4},{value:"Details",id:"details",level:4},{value:"SQL",id:"sql",level:2},{value:"Query",id:"query",level:3},{value:"Synopsis",id:"synopsis-1",level:4},{value:"Details",id:"details-1",level:4},{value:"Output",id:"output",level:2},{value:"Kafka",id:"kafka-1",level:3},{value:"Serializer",id:"serializer",level:2},{value:"Raw",id:"raw",level:3},{value:"Synopsis",id:"synopsis-2",level:4},{value:"Details",id:"details-2",level:4},{value:"JSON",id:"json-1",level:3},{value:"Tar.gz",id:"targz",level:3},{value:"Contact Us",id:"contact-us",level:2}],u={toc:g},p="wrapper";function y(e){let{components:t,...n}=e;return(0,l.yg)(p,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"introduction"},"Introduction"),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"core-concepts"},"Core Concepts"),(0,l.yg)("h3",{id:"event"},"Event"),(0,l.yg)("h4",{id:"field-name"},"Field Name"),(0,l.yg)("p",null,"A valid field name should not contains ",(0,l.yg)("inlineCode",{parentName:"p"},"."),", ",(0,l.yg)("inlineCode",{parentName:"p"},"@")," and any other characters that not allowed in ANSI standard SQL 2003 syntax."),(0,l.yg)("p",null,"Reserved field names includes:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"__root__")," means top level of the event."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"__metadata__")," means metadata field for internal use.")),(0,l.yg)("h4",{id:"metadata"},"Metadata"),(0,l.yg)("p",null,"Metadata can be set as usual fields, all the fields in metadata are invisible for output, it's just for internal use."),(0,l.yg)("h4",{id:"field-reference"},"Field Reference"),(0,l.yg)("p",null,"Single level: ",(0,l.yg)("inlineCode",{parentName:"p"},"a"),"\nMultiple level: ",(0,l.yg)("inlineCode",{parentName:"p"},"a.b.c"),"\nTop leve (Root) Reference: ",(0,l.yg)("inlineCode",{parentName:"p"},"__root__")),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"[TODO]"," Notes: this design should be compatible with Spark SQL.")),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"input"},"Input"),(0,l.yg)("h3",{id:"kafka"},"Kafka"),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"filters"},"Filters"),(0,l.yg)("h3",{id:"json"},"JSON"),(0,l.yg)("h3",{id:"split"},"Split"),(0,l.yg)("h4",{id:"synopsis"},"Synopsis"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Setting"),(0,l.yg)("th",{parentName:"tr",align:null},"Input type"),(0,l.yg)("th",{parentName:"tr",align:null},"Required"),(0,l.yg)("th",{parentName:"tr",align:null},"Default value"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"delimiter"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},'" "')),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"keys"),(0,l.yg)("td",{parentName:"tr",align:null},"array"),(0,l.yg)("td",{parentName:"tr",align:null},"yes"),(0,l.yg)("td",{parentName:"tr",align:null},"[]")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"source_field"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"yes"),(0,l.yg)("td",{parentName:"tr",align:null},'""')),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"tag_on_failure"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},'"_tag"')),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"target_field"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},'"',"_","_","root","_","_",'"')))),(0,l.yg)("h4",{id:"details"},"Details"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"delimiter")),(0,l.yg)("p",null,"regular expression is supported."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"keys")),(0,l.yg)("p",null,"if number of parts splited by ",(0,l.yg)("inlineCode",{parentName:"p"},"delimiter")," is larger than number of keys in ",(0,l.yg)("inlineCode",{parentName:"p"},"keys"),", the extra parts in the right side will be ignored. "),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"source_field")),(0,l.yg)("p",null,"if ",(0,l.yg)("inlineCode",{parentName:"p"},"source_field")," does not exists, nothing will be done."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"target_field")),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"sql"},"SQL"),(0,l.yg)("p",null,"SQL can be used to filter and aggregate events, the underlying techniques is Spark SQL."),(0,l.yg)("p",null,"For example, the following sql filters events that response_time between ","[300, 1200]"," milliseconds."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"select * from mytable where response_time >= 300 and response_time <= 1200\n")),(0,l.yg)("p",null,"And this sql count sales for each city:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"select city, count(sales) from mytable group by city\n")),(0,l.yg)("p",null,"Also, You can combine these two sqls into one sql for both filtering and aggregation:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"select city, count(*) from mytable where response_time >= 300 and response_time <= 1200 group by city\n")),(0,l.yg)("p",null,"Pipeline multiple sqls:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'sql {\n    query {\n        table_name = "mytable1"\n        sql = "select * from mytable1 where "\n    }\n    \n    query {\n        table_name = ""\n    }\n}\n')),(0,l.yg)("h3",{id:"query"},"Query"),(0,l.yg)("h4",{id:"synopsis-1"},"Synopsis"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Setting"),(0,l.yg)("th",{parentName:"tr",align:null},"Input type"),(0,l.yg)("th",{parentName:"tr",align:null},"Required"),(0,l.yg)("th",{parentName:"tr",align:null},"Default value"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"table_name"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},'"mytable"')),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"sql"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"yes"),(0,l.yg)("td",{parentName:"tr",align:null},"-")))),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"TODO : maybe we can add a ",(0,l.yg)("inlineCode",{parentName:"p"},"schema")," settings for explicitly defining table schema. By now, schema is auto generated.")),(0,l.yg)("h4",{id:"details-1"},"Details"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"table_name")),(0,l.yg)("p",null,'Registers a temporary table using the given name, the default value is "mytable". You can use it in ',(0,l.yg)("inlineCode",{parentName:"p"},"sql"),", such as:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"select * from mytable where http_status >= 500\n")),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"sql")),(0,l.yg)("p",null,"Executes a SQL query using the given sql string."),(0,l.yg)("hr",null),(0,l.yg)("h2",{id:"output"},"Output"),(0,l.yg)("h3",{id:"kafka-1"},"Kafka"),(0,l.yg)("h2",{id:"serializer"},"Serializer"),(0,l.yg)("h3",{id:"raw"},"Raw"),(0,l.yg)("p",null,"The default serializer is ",(0,l.yg)("inlineCode",{parentName:"p"},"raw"),". If no serializers configured in input/output, ",(0,l.yg)("inlineCode",{parentName:"p"},"raw")," will be used."),(0,l.yg)("h4",{id:"synopsis-2"},"Synopsis"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Setting"),(0,l.yg)("th",{parentName:"tr",align:null},"Input type"),(0,l.yg)("th",{parentName:"tr",align:null},"Required"),(0,l.yg)("th",{parentName:"tr",align:null},"Default value"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"charset"),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},"no"),(0,l.yg)("td",{parentName:"tr",align:null},'"utf-8"')))),(0,l.yg)("h4",{id:"details-2"},"Details"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"charset")),(0,l.yg)("p",null,"Serialize or deserialize using the given charset."),(0,l.yg)("p",null,"Available charsets are:"),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"[TODO]"," list all supported charsets, refer to logstash and these links:")),(0,l.yg)("p",null,(0,l.yg)("a",{parentName:"p",href:"https://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html"},"https://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html"),"\n",(0,l.yg)("a",{parentName:"p",href:"http://docs.oracle.com/javase/7/docs/technotes/guides/intl/encoding.doc.html"},"http://docs.oracle.com/javase/7/docs/technotes/guides/intl/encoding.doc.html"),"\n",(0,l.yg)("a",{parentName:"p",href:"http://www.iana.org/assignments/character-sets/character-sets.xhtml"},"http://www.iana.org/assignments/character-sets/character-sets.xhtml")),(0,l.yg)("h3",{id:"json-1"},"JSON"),(0,l.yg)("h3",{id:"targz"},"Tar.gz"),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"compressed codec")),(0,l.yg)("h2",{id:"contact-us"},"Contact Us"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Mail list: ",(0,l.yg)("strong",{parentName:"li"},(0,l.yg)("a",{parentName:"strong",href:"mailto:dev@seatunnel.apache.org"},"dev@seatunnel.apache.org")),". Mail to ",(0,l.yg)("inlineCode",{parentName:"li"},"dev-subscribe@seatunnel.apache.org"),", follow the reply to subscribe the mail list."),(0,l.yg)("li",{parentName:"ul"},"Slack: Send ",(0,l.yg)("inlineCode",{parentName:"li"},"Request to join SeaTunnel slack")," mail to the mail list(",(0,l.yg)("inlineCode",{parentName:"li"},"dev@seatunnel.apache.org"),"), we will invite you in.")))}y.isMDXComponent=!0}}]);