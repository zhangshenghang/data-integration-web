"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[67483],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>d});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=p(n),m=a,d=g["".concat(s,".").concat(m)]||g[m]||c[m]||i;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[g]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75562:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(58168),a=(n(96540),n(15680));const i={},o=void 0,l={unversionedId:"configuration/input-plugins/KafkaStream",id:"version-1.x/configuration/input-plugins/KafkaStream",title:"KafkaStream",description:"Input plugin : Kafka",source:"@site/versioned_docs/version-1.x/configuration/input-plugins/KafkaStream.md",sourceDirName:"configuration/input-plugins",slug:"/configuration/input-plugins/KafkaStream",permalink:"/zh-CN/docs/1.x/configuration/input-plugins/KafkaStream",draft:!1,editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/versioned_docs/version-1.x/configuration/input-plugins/KafkaStream.md",tags:[],version:"1.x",frontMatter:{},sidebar:"docs",previous:{title:"Jdbc",permalink:"/zh-CN/docs/1.x/configuration/input-plugins/Jdbc"},next:{title:"MySQL",permalink:"/zh-CN/docs/1.x/configuration/input-plugins/MySQL"}},s={},p=[{value:"Input plugin : Kafka",id:"input-plugin--kafka",level:2},{value:"Description",id:"description",level:3},{value:"Options",id:"options",level:3},{value:"topics string",id:"topics-string",level:5},{value:"consumer.group.id string",id:"consumergroupid-string",level:5},{value:"consumer.bootstrap.servers string",id:"consumerbootstrapservers-string",level:5},{value:"consumer string",id:"consumer-string",level:5},{value:"Examples",id:"examples",level:3}],u={toc:p},g="wrapper";function c(e){let{components:t,...n}=e;return(0,a.yg)(g,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"input-plugin--kafka"},"Input plugin : Kafka"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Author: InterestingLab"),(0,a.yg)("li",{parentName:"ul"},"Homepage: ",(0,a.yg)("a",{parentName:"li",href:"https://interestinglab.github.io/seatunnel-docs"},"https://interestinglab.github.io/seatunnel-docs")),(0,a.yg)("li",{parentName:"ul"},"Version: 1.1.0")),(0,a.yg)("h3",{id:"description"},"Description"),(0,a.yg)("p",null,"Read events from one or more kafka topics. Supporting Kafka >= 0.10.0"),(0,a.yg)("h3",{id:"options"},"Options"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"name"),(0,a.yg)("th",{parentName:"tr",align:null},"type"),(0,a.yg)("th",{parentName:"tr",align:null},"required"),(0,a.yg)("th",{parentName:"tr",align:null},"default value"),(0,a.yg)("th",{parentName:"tr",align:null},"engine"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#topics-string"},"topics")),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"yes"),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"all streaming")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#consumergroupid-string"},"consumer.group.id")),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"yes"),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"spark streaming")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#consumerbootstrapservers-string"},"consumer.bootstrap.servers")),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"yes"),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"all streaming")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"#consumer-string"},"consumer.*")),(0,a.yg)("td",{parentName:"tr",align:null},"string"),(0,a.yg)("td",{parentName:"tr",align:null},"no"),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"all streaming")))),(0,a.yg)("h5",{id:"topics-string"},"topics ","[string]"),(0,a.yg)("p",null,'Kafka topic. Multiple topics separated by commas. For example, "tpc1,tpc2".'),(0,a.yg)("h5",{id:"consumergroupid-string"},"consumer.group.id ","[string]"),(0,a.yg)("p",null,"Kafka consumer group id, a unique string that identifies the consumer group this consumer belongs to. Only works on Spark Streaming application."),(0,a.yg)("h5",{id:"consumerbootstrapservers-string"},"consumer.bootstrap.servers ","[string]"),(0,a.yg)("p",null,"A list of host/port pairs to use for establishing the initial connection to the Kafka cluster.This string should be in the form ",(0,a.yg)("inlineCode",{parentName:"p"},"host1:port1,host2:port2,.... ")),(0,a.yg)("h5",{id:"consumer-string"},"consumer ","[string]"),(0,a.yg)("p",null,"In addition to the above parameters that must be specified for the consumer client, you can also specify multiple kafka's consumer parameters described in ",(0,a.yg)("a",{parentName:"p",href:"http://kafka.apache.org/10/documentation.html#consumerconfigs"},"consumerconfigs"),"."),(0,a.yg)("p",null,"The Spark Structured Streaming optional configurations refer to ",(0,a.yg)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/structured-streaming-kafka-integration.html#reading-data-from-kafka"},"Structured Streaming + Kafka Integration Guide")),(0,a.yg)("p",null,'The way to specify parameters is to use the prefix "consumer" before the parameter. For example, ',(0,a.yg)("inlineCode",{parentName:"p"},"rebalance.max.retries")," is specified as: ",(0,a.yg)("inlineCode",{parentName:"p"},"consumer.rebalance.max.retries = 100"),".If you do not specify these parameters, it will be set the default values according to Kafka documentation"),(0,a.yg)("h3",{id:"examples"},"Examples"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Spark Streaming")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'kafkaStream {\n    topics = "seatunnel"\n    consumer.bootstrap.servers = "localhost:9092"\n    consumer.group.id = "seatunnel_group"\n    consumer.rebalance.max.retries = 100\n}\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Spark Structured Streaming")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'kafkaStream {\n    topics = "seatunnel"\n    consumer.bootstrap.servers = "localhost:9092"\n    consumer.group.id = "seatunnel_group"\n    consumer.rebalance.max.retries = 100\n    consumer.failOnDataLoss = false\n}\n')))}c.isMDXComponent=!0}}]);