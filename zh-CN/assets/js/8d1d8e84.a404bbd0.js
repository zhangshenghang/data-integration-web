"use strict";(self.webpackChunkseatunnel_website=self.webpackChunkseatunnel_website||[]).push([[38461],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),g=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=g(e.components);return a.createElement(p.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=g(t),d=r,m=s["".concat(p,".").concat(d)]||s[d]||c[d]||i;return t?a.createElement(m,l(l({ref:n},u),{},{components:t})):a.createElement(m,l({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var g=2;g<i;g++)l[g]=t[g];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},83197:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>g});var a=t(58168),r=(t(96540),t(15680));const i={},l=void 0,o={unversionedId:"monitoring",id:"version-1.x/monitoring",title:"monitoring",description:"Guardian is a sub-project of seatunnel. It is a monitoring and alarming tool that can provide monitoring of seatunnel's survival and scheduling delay. Guardian is capable of dynamically loading configuration files at runtime and provides an HTTP API to support real-time modification of configuration. Currently only seatunnel on Yarn is supported.",source:"@site/versioned_docs/version-1.x/monitoring.md",sourceDirName:".",slug:"/monitoring",permalink:"/zh-CN/docs/1.x/monitoring",draft:!1,editUrl:"https://github.com/apache/incubator-seatunnel-website/edit/main/versioned_docs/version-1.x/monitoring.md",tags:[],version:"1.x",frontMatter:{},sidebar:"docs",previous:{title:"Plugin development",permalink:"/zh-CN/docs/1.x/developing-plugin"}},p={},g=[{value:"run Guardian",id:"run-guardian",level:2},{value:"config file",id:"config-file",level:2},{value:"yarn",id:"yarn",level:3},{value:"apps",id:"apps",level:3},{value:"alert_manager",id:"alert_manager",level:3},{value:"routes",id:"routes",level:4},{value:"<strong>emails</strong>",id:"emails",level:4},{value:"<strong>webhooks</strong>",id:"webhooks",level:4},{value:"Guardian interface usage guide",id:"guardian-interface-usage-guide",level:2},{value:"GET",id:"get",level:3},{value:"Overview",id:"overview",level:4},{value:"Interface parameter definition",id:"interface-parameter-definition",level:4},{value:"return result",id:"return-result",level:4},{value:"POST",id:"post",level:3},{value:"Overview",id:"overview-1",level:4},{value:"Interface parameter definition",id:"interface-parameter-definition-1",level:4},{value:"return result",id:"return-result-1",level:4},{value:"DELETE",id:"delete",level:3},{value:"Overview",id:"overview-2",level:4},{value:"Interface parameter definition",id:"interface-parameter-definition-2",level:4},{value:"return result",id:"return-result-2",level:4},{value:"Return status code description",id:"return-status-code-description",level:3}],u={toc:g},s="wrapper";function c(e){let{components:n,...t}=e;return(0,r.yg)(s,(0,a.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"#Guardian"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/InterestingLab/guardian"},"Guardian")," is a sub-project of seatunnel. It is a monitoring and alarming tool that can provide monitoring of seatunnel's survival and scheduling delay. Guardian is capable of dynamically loading configuration files at runtime and provides an HTTP API to support real-time modification of configuration. Currently only seatunnel on Yarn is supported."),(0,r.yg)("h2",{id:"run-guardian"},"run Guardian"),(0,r.yg)("p",null,"Download Guardian, take guardian_1.0.0 as an example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"wget https://github.com/InterestingLab/guardian/releases/download/v1.0.0/guardian_1.0.0.tar.gz\ntar -xvf guardian_1.0.0\ncd guardian_1.0.0\n./bin/guardian check config.json\n")),(0,r.yg)("h2",{id:"config-file"},"config file"),(0,r.yg)("p",null,"Guardian configuration files are written in ",(0,r.yg)("inlineCode",{parentName:"p"},"JSON")," format, a valid example, click ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/InterestingLab/guardian/blob/master/config.json.template"},"here")),(0,r.yg)("p",null,"The entire configuration file consists of the following parts:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"port: the port to which the interface API is bound"),(0,r.yg)("li",{parentName:"ul"},"node_name: node information"),(0,r.yg)("li",{parentName:"ul"},"check_interval: the time interval for checking the application"),(0,r.yg)("li",{parentName:"ul"},"yarn: the detected YARN cluster address"),(0,r.yg)("li",{parentName:"ul"},"apps: specific apps that need to be detected"),(0,r.yg)("li",{parentName:"ul"},"alert_manager: alert management")),(0,r.yg)("p",null,"The following is a detailed description of each part:"),(0,r.yg)("h3",{id:"yarn"},"yarn"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"# Yarn resourcemanager\napi_hosts: <list>\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'"yarn": {\n    "api_hosts": [\n        "10.11.10.21:8088",\n        "10.11.10.22:8088"\n    ]\n}\n')),(0,r.yg)("h3",{id:"apps"},"apps"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'[{\n    # Spark application name\n    "app_name": <string>,\n    # Restart command when application fails\n    "start_cmd": <string>,\n    # The number of applications running under the same app_name\n    "app_num": <number>,\n    # Application type, default \'spark\'\n    "check_type": <string>,\n    # mark whether the application is valid or not\n    "active": <boolean>\n    "check_options": {\n        # Alarm level, support WARNNING, ERROR, etc.\n        "alert_level": <string>,\n        "max_delayed_batch_num": <number>,\n        "max_delayed_time": <number>\n    }\n}]\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'"apps": [\n    {\n        "app_name": "seatunnel-app",\n        "start_cmd": "test_cmd",\n        "app_num": 1,\n        "check_type": "spark",\n        "check_options": {\n            "alert_level": "WARNING",\n            "max_delayed_batch_num": 10,\n            "max_delayed_time": 600\n        }\n    }\n]\n')),(0,r.yg)("h3",{id:"alert_manager"},"alert_manager"),(0,r.yg)("h4",{id:"routes"},"routes"),(0,r.yg)("p",null,"Alarm routing, currently only supports alarm levels"),(0,r.yg)("p",null,"Trigger an alarm when the alarm level is ",(0,r.yg)("inlineCode",{parentName:"p"},"WARNNING")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"ERROR")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'"routes": {\n    "match": {\n        "level": ["WARNING", "ERROR"]\n    }\n}\n')),(0,r.yg)("h4",{id:"emails"},(0,r.yg)("strong",{parentName:"h4"},"emails")),(0,r.yg)("p",null,"Send alarm information by email"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'# Email verification username\n"auth_username": <string>,\n# Email verification password\n"auth_password": <string>,\n# Mailbox stmp server\n"smtp_server": <string>,\n# sender\n"sender": <string>,\n# recipient list\n"receivers": <list>\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'"emails": {\n    "auth_username": "username",\n    "auth_password": "password",\n    "smtp_server": "smtp.163.com",\n    "sender": "huochen1994@163.com",\n    "receivers": ["garygaowork@gmail.com"],\n    "routes": {\n        "match": {\n            "level": ["WARNING", "ERROR"]\n        }\n    }\n}\n')),(0,r.yg)("h4",{id:"webhooks"},(0,r.yg)("strong",{parentName:"h4"},"webhooks")),(0,r.yg)("p",null,"Implement custom alarm mode through interface"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'# webhook interface address\n"url": <string>\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'"webhook": {\n    "url": "http://api.webhook.interestinglab.org/alert",\n    "routes": {\n        "match": {\n            "level": ["ERROR"]\n        }\n    }\n}\n')),(0,r.yg)("p",null,"When Gaurdian calls the interface, it will send an HTTP POST request to the configured interface address in the following JSON format:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'{\n    "subject": "Guardian",\n    "objects": "seatunnel_app",\n    "content": "App is not running or less than expected number of running instance, will restart"\n}\n')),(0,r.yg)("h2",{id:"guardian-interface-usage-guide"},"Guardian interface usage guide"),(0,r.yg)("h3",{id:"get"},"GET"),(0,r.yg)("h4",{id:"overview"},"Overview"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Function description"),(0,r.yg)("p",{parentName:"li"},"Get the configuration information of Guardian corresponding to app_name")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Basic interface"),(0,r.yg)("p",{parentName:"li"},"http://localhost:5000/config/","[app_name]")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Request method"),(0,r.yg)("p",{parentName:"li"},"get"))),(0,r.yg)("h4",{id:"interface-parameter-definition"},"Interface parameter definition"),(0,r.yg)("p",null,"N/A"),(0,r.yg)("h4",{id:"return-result"},"return result"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'curl \'http://localhost:5000/config/seatunnel-app2\'\n\n{\n  "content": {\n    "app_name": "seatunnel-app2",\n    "app_num": 1,\n    "check_options": {},\n    "check_type": "spark",\n    "start_cmd": "test_cmd_not_exist"\n  },\n  "status": 0\n}\n')),(0,r.yg)("h3",{id:"post"},"POST"),(0,r.yg)("h4",{id:"overview-1"},"Overview"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Function description"),(0,r.yg)("p",{parentName:"li"},"Update or add application configuration information in Guardian. When ",(0,r.yg)("inlineCode",{parentName:"p"},"app_name")," exists, update the corresponding configuration information. When ",(0,r.yg)("inlineCode",{parentName:"p"},"app_name")," does not exist, add an application monitoring configuration")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Basic interface"),(0,r.yg)("p",{parentName:"li"},"http://localhost:5000/config/","[app_name]")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Request method"),(0,r.yg)("p",{parentName:"li"},"post"))),(0,r.yg)("h4",{id:"interface-parameter-definition-1"},"Interface parameter definition"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Field"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Comment"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Instance"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"start_cmd"),(0,r.yg)("td",{parentName:"tr",align:"center"},"string"),(0,r.yg)("td",{parentName:"tr",align:"center"},"restart command"),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"app_num"),(0,r.yg)("td",{parentName:"tr",align:"center"},"num"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Existing number"),(0,r.yg)("td",{parentName:"tr",align:"center"},"2")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"check_type"),(0,r.yg)("td",{parentName:"tr",align:"center"},"string"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Application type"),(0,r.yg)("td",{parentName:"tr",align:"center"},"spark")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"check_options"),(0,r.yg)("td",{parentName:"tr",align:"center"},"dict"),(0,r.yg)("td",{parentName:"tr",align:"center"}),(0,r.yg)("td",{parentName:"tr",align:"center"})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"active"),(0,r.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,r.yg)("td",{parentName:"tr",align:"center"},"is active"),(0,r.yg)("td",{parentName:"tr",align:"center"},"true")))),(0,r.yg)("h4",{id:"return-result-1"},"return result"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"`\ncurl 'http://localhost:5000/config/seatunnel-app2' -d '\n{\n    'active': false\n}'\n\n{\n  \"status\": 0\n}\n")),(0,r.yg)("h3",{id:"delete"},"DELETE"),(0,r.yg)("h4",{id:"overview-2"},"Overview"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Function description"),(0,r.yg)("p",{parentName:"li"},"Delete the configuration information of Guardian corresponding to app_name")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Basic interface"),(0,r.yg)("p",{parentName:"li"},"http://localhost:5000/config/","[app_name]")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Request method"),(0,r.yg)("p",{parentName:"li"},"delete"))),(0,r.yg)("h4",{id:"interface-parameter-definition-2"},"Interface parameter definition"),(0,r.yg)("p",null,"N/A"),(0,r.yg)("h4",{id:"return-result-2"},"return result"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'curl -XDELETE 10.212.81.56:5000/config/seatunnel-app2\n\n{\n  "status": 0\n}\n')),(0,r.yg)("h3",{id:"return-status-code-description"},"Return status code description"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"status"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"0"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Success")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"1"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Parameter error")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"2"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Internal error")))))}c.isMDXComponent=!0}}]);